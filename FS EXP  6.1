const express = require('express');
const app = express();

// Logging Middleware (applies globally)
app.use((req, res, next) => {
  const timestamp = new Date().toISOString();
  console.log(`[${timestamp}] ${req.method} ${req.originalUrl}`);
  next();
});

// Bearer Token Auth Middleware (for protected routes)
const checkAuth = (req, res, next) => {
  const authHeader = req.headers['authorization'];
  if (!authHeader) {
    return res.status(401).json({error: 'Authorization header missing'});
  }
  const token = authHeader.split(' ')[1];
  if (token !== 'mysecrettoken') {
    return res.status(403).json({error: 'Invalid or missing Bearer token'});
  }
  next();
};

// Public route (no token required)
app.get('/public', (req, res) => {
  res.send('This is a public route — no authentication required!');
});

// Protected route (requires Bearer token)
app.get('/protected', checkAuth, (req, res) => {
  res.send('This is a protected route — valid Bearer token received!');
});

// Start server
app.listen(3000, () => console.log('Server running on port 3000'));
