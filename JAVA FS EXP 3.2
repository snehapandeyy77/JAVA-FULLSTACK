// App.jsx

import React, { useState } from "react";

const App = () => {
  // âœ… Initial books
  const [books, setBooks] = useState([
    { id: 1, title: "Java Fundamentals", author: "James Gosling" },
    { id: 2, title: "React Basics", author: "Dan Abramov" },
    { id: 3, title: "Spring Boot Guide", author: "Rod Johnson" },
  ]);

  // âœ… State for search, new book title, new author
  const [search, setSearch] = useState("");
  const [newTitle, setNewTitle] = useState("");
  const [newAuthor, setNewAuthor] = useState("");

  // âœ… Add a new book
  const handleAddBook = () => {
    if (newTitle.trim() === "" || newAuthor.trim() === "") {
      alert("Please enter both title and author");
      return;
    }
    const newBook = {
      id: Date.now(),
      title: newTitle,
      author: newAuthor,
    };
    setBooks([...books, newBook]);
    setNewTitle("");
    setNewAuthor("");
  };

  // âœ… Remove a book
  const handleRemoveBook = (id) => {
    setBooks(books.filter((book) => book.id !== id));
  };

  // âœ… Filter books by search
  const filteredBooks = books.filter((book) =>
    book.title.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div style={styles.container}>
      <h1 style={styles.heading}>ðŸ“š Library Management</h1>

      {/* âœ… Search */}
      <input
        type="text"
        placeholder="Search by title..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        style={styles.input}
      />

      {/* âœ… Add Book Form */}
      <div style={styles.form}>
        <input
          type="text"
          placeholder="Book Title"
          value={newTitle}
          onChange={(e) => setNewTitle(e.target.value)}
          style={styles.input}
        />
        <input
          type="text"
          placeholder="Author"
          value={newAuthor}
          onChange={(e) => setNewAuthor(e.target.value)}
          style={styles.input}
        />
        <button onClick={handleAddBook} style={styles.button}>
          Add Book
        </button>
      </div>

      {/* âœ… Book List */}
      <ul style={styles.list}>
        {filteredBooks.length > 0 ? (
          filteredBooks.map((book) => (
            <li key={book.id} style={styles.listItem}>
              <div>
                <strong>{book.title}</strong> â€” {book.author}
              </div>
              <button
                onClick={() => handleRemoveBook(book.id)}
                style={styles.removeButton}
              >
                Remove
              </button>
            </li>
          ))
        ) : (
          <p>No books found.</p>
        )}
      </ul>
    </div>
  );
};

// âœ… Styles
const styles = {
  container: {
    maxWidth: "600px",
    margin: "0 auto",
    padding: "20px",
    fontFamily: "Arial, sans-serif",
  },
  heading: {
    textAlign: "center",
  },
  input: {
    padding: "8px",
    margin: "5px",
    width: "calc(100% - 20px)",
    border: "1px solid #ccc",
    borderRadius: "5px",
  },
  form: {
    marginTop: "15px",
    marginBottom: "15px",
  },
  button: {
    padding: "10px 15px",
    backgroundColor: "#007bff",
    color: "white",
    border: "none",
    borderRadius: "5px",
    cursor: "pointer",
    marginTop: "8px",
  },
  list: {
    listStyleType: "none",
    padding: 0,
  },
  listItem: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    padding: "10px",
    borderBottom: "1px solid #ddd",
  },
  removeButton: {
    padding: "5px 10px",
    backgroundColor: "red",
    color: "white",
    border: "none",
    borderRadius: "4px",
    cursor: "pointer",
  },
};

export default App;
