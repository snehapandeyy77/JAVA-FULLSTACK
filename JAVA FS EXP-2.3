<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Simple SVG Drawing Tool</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 0; }
    #toolbar { padding: 10px; background: #eee; }
    #toolbar select, #toolbar input { margin-right: 10px; }
    svg { border: 1px solid #aaa; width: 100%; height: 90vh; cursor: crosshair; }
  </style>
</head>
<body>
  <div id="toolbar">
    Tool: <select id="tool">
      <option value="rect">Rectangle</option>
      <option value="circle">Circle</option>
      <option value="line">Line</option>
    </select>
    Stroke: <input type="color" id="stroke" value="#000000">
    Fill: <input type="color" id="fill" value="#ff0000">
    Width: <input type="number" id="width" value="2" min="1" max="10">
    <button id="clear">Clear</button>
  </div>

  <svg id="canvas"></svg>

  <script>
    const svg = document.getElementById('canvas');
    let drawing = false, startX, startY, shape;

    svg.addEventListener('mousedown', e => {
      drawing = true;
      startX = e.offsetX; startY = e.offsetY;
      const tool = document.getElementById('tool').value;
      const stroke = document.getElementById('stroke').value;
      const fill = document.getElementById('fill').value;
      const width = document.getElementById('width').value;

      if (tool === 'rect') {
        shape = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
        shape.setAttribute('x', startX);
        shape.setAttribute('y', startY);
        shape.setAttribute('width', 0);
        shape.setAttribute('height', 0);
      } else if (tool === 'circle') {
        shape = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
        shape.setAttribute('cx', startX);
        shape.setAttribute('cy', startY);
        shape.setAttribute('r', 0);
      } else if (tool === 'line') {
        shape = document.createElementNS('http://www.w3.org/2000/svg', 'line');
        shape.setAttribute('x1', startX);
        shape.setAttribute('y1', startY);
        shape.setAttribute('x2', startX);
        shape.setAttribute('y2', startY);
      }
      shape.setAttribute('stroke', stroke);
      shape.setAttribute('stroke-width', width);
      shape.setAttribute('fill', tool==='line' ? 'none' : fill);
      svg.appendChild(shape);
    });

    svg.addEventListener('mousemove', e => {
      if (!drawing) return;
      const x = e.offsetX, y = e.offsetY;
      if (shape.tagName === 'rect') {
        shape.setAttribute('x', Math.min(x, startX));
        shape.setAttribute('y', Math.min(y, startY));
        shape.setAttribute('width', Math.abs(x - startX));
        shape.setAttribute('height', Math.abs(y - startY));
      } else if (shape.tagName === 'circle') {
        const r = Math.sqrt((x - startX)**2 + (y - startY)**2);
        shape.setAttribute('r', r);
      } else if (shape.tagName === 'line') {
        shape.setAttribute('x2', x);
        shape.setAttribute('y2', y);
      }
    });

    svg.addEventListener('mouseup', () => drawing = false);

    document.getElementById('clear').onclick = () => svg.innerHTML = '';
  </script>
</body>
</html>
