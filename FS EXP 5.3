// app.js

const express = require('express');
const mongoose = require('mongoose');
const app = express();
app.use(express.json());

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/ecommerce', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => console.log('MongoDB connected'))
  .catch(err => console.error('Connection error:', err));

// Product Schema with nested variants
const variantSchema = new mongoose.Schema({
  color: String,
  size: String,
  stock: Number,
});

const productSchema = new mongoose.Schema({
  name: String,
  price: Number,
  category: String,
  variants: [variantSchema],
});

const Product = mongoose.model('Product', productSchema);

// Insert sample products (run once)
app.post('/sample-products', async (req, res) => {
  const products = [
    {
      name: "T-Shirt",
      price: 499,
      category: "Apparel",
      variants: [
        { color: "Red", size: "M", stock: 10 },
        { color: "Blue", size: "L", stock: 5 },
      ],
    },
    {
      name: "Sneakers",
      price: 1499,
      category: "Footwear",
      variants: [
        { color: "Black", size: "42", stock: 3 },
        { color: "White", size: "40", stock: 8 },
      ],
    },
    {
      name: "Backpack",
      price: 999,
      category: "Accessories",
      variants: [
        { color: "Grey", size: "Standard", stock: 15 },
      ],
    }
  ];
  await Product.insertMany(products);
  res.json({ message: "Sample products inserted" });
});

// Get all products
app.get('/products', async (req, res) => {
  const products = await Product.find();
  res.json(products);
});

// Filter products by category
app.get('/products/category/:category', async (req, res) => {
  const products = await Product.find({ category: req.params.category });
  res.json(products);
});

// Project: Get only variant details of a product
app.get('/products/:id/variants', async (req, res) => {
  const product = await Product.findById(req.params.id).select('variants');
  res.json(product ? product.variants : []);
});

// Start server
app.listen(3000, () => {
  console.log('E-commerce Catalog API running on port 3000');
});
